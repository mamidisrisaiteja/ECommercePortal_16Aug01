name: Regression Test Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run regression tests every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_tags:
        description: 'Test tags to run (auth, smoke, regression)'
        required: false
        default: 'regression'
        type: choice
        options:
        - auth
        - smoke
        - regression
        - all
      browser:
        description: 'Browser to use'
        required: false
        default: 'chromium'
        type: choice
        options:
        - chromium
        - firefox
        - webkit
      environment:
        description: 'Test environment'
        required: false
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  regression-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        browser: [chromium, firefox, webkit]
      fail-fast: false
    
    steps:
    - name: 🛎️ Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Cache Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: 🔧 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r automation_framework/requirements.txt
        
    - name: 🎭 Install Playwright Browsers
      run: |
        playwright install ${{ matrix.browser }}
        playwright install-deps
        
    - name: 🧪 Run Authentication Tests (TC_AUTH_01, TC_AUTH_02)
      working-directory: automation_framework
      run: |
        pytest tests/ \
          --browser=${{ matrix.browser }} \
          --headed=false \
          -m "auth" \
          --html=reports/report-${{ matrix.browser }}-${{ matrix.python-version }}.html \
          --self-contained-html \
          --alluredir=reports/allure-results \
          --junitxml=reports/junit-${{ matrix.browser }}-${{ matrix.python-version }}.xml \
          -v
      env:
        BASE_URL: https://www.saucedemo.com
        BROWSER_NAME: ${{ matrix.browser }}
        HEADLESS: true
        
    - name: 🧪 Run Smoke Tests
      if: github.event_name == 'push' || github.event.inputs.test_tags == 'smoke' || github.event.inputs.test_tags == 'all'
      working-directory: automation_framework
      run: |
        pytest tests/ \
          --browser=${{ matrix.browser }} \
          --headed=false \
          -m "smoke" \
          --html=reports/smoke-report-${{ matrix.browser }}-${{ matrix.python-version }}.html \
          --self-contained-html \
          --alluredir=reports/allure-results-smoke \
          -v
          
    - name: 🧪 Run Full Regression Suite
      if: github.event_name == 'schedule' || github.event.inputs.test_tags == 'regression' || github.event.inputs.test_tags == 'all'
      working-directory: automation_framework
      run: |
        pytest tests/ \
          --browser=${{ matrix.browser }} \
          --headed=false \
          -m "regression" \
          --html=reports/regression-report-${{ matrix.browser }}-${{ matrix.python-version }}.html \
          --self-contained-html \
          --alluredir=reports/allure-results-regression \
          -v
          
    - name: 📊 Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-reports-${{ matrix.browser }}-${{ matrix.python-version }}
        path: |
          automation_framework/reports/
          automation_framework/reports/screenshots/
          automation_framework/reports/logs/
        retention-days: 30
        
    - name: 📈 Upload JUnit Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: junit-results-${{ matrix.browser }}-${{ matrix.python-version }}
        path: automation_framework/reports/junit-*.xml
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: 🛎️ Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔒 Run Security Scan
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_PYTHON_BLACK: false
        VALIDATE_PYTHON_ISORT: false

  allure-report:
    runs-on: ubuntu-latest
    needs: regression-tests
    if: always()
    steps:
    - name: 🛎️ Checkout Repository
      uses: actions/checkout@v4
      
    - name: 📥 Download Allure Results
      uses: actions/download-artifact@v3
      with:
        path: allure-results
        
    - name: 📊 Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history
        
    - name: 🚀 Deploy Allure Report to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-history
        destination_dir: allure-report

  slack-notification:
    runs-on: ubuntu-latest
    needs: [regression-tests, security-scan]
    if: always()
    steps:
    - name: 📢 Slack Notification - Success
      if: needs.regression-tests.result == 'success'
      uses: 8398a7/action-slack@v3
      with:
        status: success
        channel: '#qa-automation'
        text: |
          ✅ Regression Tests PASSED for ECommercePortal_16Aug01
          🎯 Tests: TC_AUTH_01, TC_AUTH_02
          🌐 Branch: ${{ github.ref_name }}
          👤 Triggered by: ${{ github.actor }}
          📊 View Report: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: 📢 Slack Notification - Failure
      if: needs.regression-tests.result == 'failure'
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#qa-automation'
        text: |
          ❌ Regression Tests FAILED for ECommercePortal_16Aug01
          🎯 Tests: TC_AUTH_01, TC_AUTH_02
          🌐 Branch: ${{ github.ref_name }}
          👤 Triggered by: ${{ github.actor }}
          🔍 Debug: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test-summary:
    runs-on: ubuntu-latest
    needs: regression-tests
    if: always()
    steps:
    - name: 📋 Test Summary Report
      run: |
        echo "## 🧪 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Test Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Cases**: TC_AUTH_01, TC_AUTH_02" >> $GITHUB_STEP_SUMMARY
        echo "- **Framework**: Python + Playwright + Pytest + BDD" >> $GITHUB_STEP_SUMMARY
        echo "- **Browsers Tested**: Chromium, Firefox, WebKit" >> $GITHUB_STEP_SUMMARY
        echo "- **Python Versions**: 3.9, 3.10, 3.11" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ needs.regression-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Useful Links:" >> $GITHUB_STEP_SUMMARY
        echo "- [📊 Allure Report](https://mamidisrisaiteja.github.io/ECommercePortal_16Aug01/allure-report/)" >> $GITHUB_STEP_SUMMARY
        echo "- [📁 Test Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        echo "- [🐛 Issues](https://github.com/${{ github.repository }}/issues)" >> $GITHUB_STEP_SUMMARY
